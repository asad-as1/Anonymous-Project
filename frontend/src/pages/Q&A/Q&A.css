.qna-container {
  min-height: 100vh;
  background-color: #f5f5f5;
  padding: 20px;
}

.questions-list {
  max-width: 1000px;
  margin: 0 auto;
  background: white;
  border-radius: 12px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  padding: 24px;
}

.questions-header {
  display: flex;
  justify-content: space-between;
  margin-bottom: 24px;
}

.questions-grid {
  display: grid;
  gap: 16px;
  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
}

.question-card {
  background: #f8f9fa;
  border: 1px solid #e9ecef;
  border-radius: 8px;
  padding: 16px;
  transition: transform 0.2s, box-shadow 0.2s;
}

.question-card:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.question-card-title {
  font-size: 18px;
  color: #2c3e50;
  margin-bottom: 8px;
}

.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 20px;
  z-index: 1000;
}

.question-form {
  background: white;
  padding: 24px;
  border-radius: 12px;
  max-width: 500px;
  width: 100%;
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
}

.form-buttons {
  display: flex;
  gap: 12px;
  justify-content: flex-end;
}

.new-question-button,
.submit-button,
.cancel-button {
  background: #4a90e2;
  color: white;
  border: none;
  padding: 10px 20px;
  border-radius: 6px;
  cursor: pointer;
  font-size: 16px;
}

.new-question-button:hover,
.submit-button:hover,
.cancel-button:hover {
  background: #357abd;
}

@media (max-width: 768px) {
  .qna-container {
    padding: 12px;
  }

  .questions-list {
    padding: 16px;
  }

  .questions-header {
    flex-direction: column;
    gap: 16px;
    align-items: stretch;
  }

  .questions-grid {
    grid-template-columns: 1fr;
  }

  .new-question-button {
    width: 100%;
  }

  .form-buttons {
    flex-direction: column;
  }

  .cancel-button,
  .submit-button {
    width: 100%;
  }
}

button:focus,
input:focus,
textarea:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(74, 144, 226, 0.4);
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.modal-overlay {
  animation: fadeIn 0.2s ease-out;
}
